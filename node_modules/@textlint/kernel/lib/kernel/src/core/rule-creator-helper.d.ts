import { RuleCreatorReporter, TextlintRuleFixableCreator, TextlintFilterRuleCreator, TextlintRuleCreator } from "../textlint-kernel-interface";
/**
 * detect that ruleCreator has linter function
 * @param {*} ruleCreator
 * @returns {boolean}
 */
export declare function hasLinter(ruleCreator: TextlintRuleCreator): boolean;
/**
 * get linter function from ruleCreator
 * if not found, throw error
 * @param {Function|Object} ruleCreator
 * @returns {Function} linter function
 * @throws
 */
export declare function getLinter(ruleCreator: TextlintRuleCreator): RuleCreatorReporter;
/**
 * detect that ruleCreator has fixer function
 * @param {*} ruleCreator
 * @returns {boolean}
 */
export declare function hasFixer(ruleCreator: TextlintRuleCreator): ruleCreator is TextlintRuleFixableCreator;
/**
 * get fixer function from ruleCreator
 * if not found, throw error
 * @param {Function|Object} ruleCreator
 * @returns {Function} fixer function
 * @throws
 */
export declare function getFixer(ruleCreator: TextlintRuleCreator): RuleCreatorReporter;
/**
 * RuleModule should has either linter or fixer.
 * @param ruleCreator
 * @returns {boolean}
 **/
export declare function isRuleModule(ruleCreator: TextlintRuleCreator): boolean;
/**
 * Validate rule module.
 * if invalid throw error
 * @param {*} ruleModule
 * @param {string} key
 * @throws
 */
export declare function assertRuleShape(ruleModule: any, key?: string): void;
/**
 * get linter function from ruleCreator
 * if not found, throw error
 * @param {*} ruleCreator
 * @returns {Function} linter function
 * @throws
 */
export declare function getFilter(ruleCreator: any): TextlintFilterRuleCreator;
